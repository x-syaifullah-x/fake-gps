version: 2.1
jobs:
  build__unit_test__instrument_test:
    machine:
      image: android:202102-01
    resource_class: large
    steps:
      - checkout
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-30;google_apis;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test --device "pixel" -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -noaudio -no-boot-anim -memory 4096 -accel on -qemu -enable-kvm
          background: true
      - run:
          name: Genarate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          name: Set local.properties
          command: |
            echo debug_store_password="$RELEASE_STORE_PASSWORD" >> local.properties
            echo debug_key_alias="$RELEASE_KEY_ALIAS" >> local.properties
            echo debug_key_password="$RELEASE_KEY_PASSWORD" >> local.properties
            echo debug_store_file=~/release.jks >> local.properties

            echo release_store_password="$RELEASE_STORE_PASSWORD" >> local.properties
            echo release_key_alias="$RELEASE_KEY_ALIAS" >> local.properties
            echo release_key_password="$RELEASE_KEY_PASSWORD" >> local.properties
            echo release_store_file=~/debug.jks >> local.properties
      - run:
          name: Generate key store
          command: |
            echo "$GOOGLE_SERVICES_XML_ASC_BASE64" | base64 --decode |
            gpg -d --passphrase $GOOGLE_SERVICES_XML_ASC_BASE64_PASSPHRASE --batch > app/src/main/res/values/google-services.xml

            echo "$RELEASE_JKS_ASC_BASE64" | base64 --decode > ~/release.jks.asc
            gpg -d --passphrase "$RELEASE_JKS_ASC_PASSPHRASE" --batch ~/release.jks.asc > ~/release.jks

            echo "$RELEASE_JKS_ASC_BASE64" | base64 --decode > ~/debug.jks.asc
            gpg -d --passphrase "$RELEASE_JKS_ASC_PASSPHRASE" --batch ~/debug.jks.asc > ~/debug.jks
      - run:
          name: Replace org.gradle.jvmargs in gradle properties
          command: |
            ORG_GRADLE_JVM=`cat gradle.properties | grep org.gradle.jvmargs`
            sed -i 's/'"${ORG_GRADLE_JVM}"'/org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8/g' gradle.properties
            cat gradle.properties | grep org.gradle.jvmargs
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle
      - run:
          name: Build
          command:  ./gradlew clean build
      - run:
          name: Unit Test
          command: ./gradlew test
      - run:
          name: Wait for emulator to start
          command: circle-android wait-for-boot
      - run:
          name: Disable emulator animations and close system dialog
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            adb shell am broadcast -a android.intent.action.CLOSE_SYSTEM_DIALOGS
            # Send keystroke Arrow Right
            sleep 3; adb shell input keyevent 22
            # Send keystroke Arrow Right again
            sleep 3; adb shell input keyevent 22
            # Send keystroke Enter to press a button on the dialog
            sleep 3; adb shell input keyevent 66
            adb shell input keyevent 82
      - run:
          name: Instrument test
          command: ./gradlew connectedDebugAndroidTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apks
      - store_test_results:
          path: app/build/test-results

workflows:
  build:
    jobs:
      - build__unit_test__instrument_test
